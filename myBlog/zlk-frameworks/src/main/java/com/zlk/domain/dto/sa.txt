这里封装dto的原因是，查评论和修改评论需要的数据类型字段不一样。
修改评论不需要查评论里的那么多数据类型，所以这里封装了一个修改评论的数据类型
以便于不操作那么多字段


首先，我认为“没必要过度执着于DTO”，在小型项目中，真的很多情况没有必要非要用DTO返回数据。直接用原生对象也完全ok。
当你的项目需要DTO的需求的时候，你就自然而然明白它是干嘛的了。

然后说说我对DTO的理解： 首要的作用，我认为就是减少原生对象的多余参数。
包括为了安全，有时候也为了节约流量。例如：密码，你就不能返回到前端。因为不安全。
其次假如说：获取博客列表的时候，也不能返回博客全文吧。顶多就返回标题，id，和前几句。
我认为第二个作用是减少重复代码。组装对象。假设用户的基本信息，详细信息，以及一些额外的附加数据。现在要返回给前台，
你可以选择拼成map返回。但是map的缺点是，无法复用。假如需要增加或者删除某个参数还好，
假如某个参数名写错了，而你又有几十个地方用到了这个单词，那就需要改几十个。而DTO,你只需要改一处即可。
其次，可以规范参数类型，因为map返回大多都是string直接返回，在存数据的时候也无法校验数据类型是否是想要的类型。假如前台要的单位是分，你后台直接传了个浮点回去，
前端就会找你麻烦。但是如果用DTO，你直接把前端的数据要求放进DTO里，你如果直接把不符合要求的类型放进去，就会报错。同时，也更便于你在DTO类里直接写注释，便于别人阅读。

